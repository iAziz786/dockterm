#!/bin/bash
set -e

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_ROOT="$(dirname "$SCRIPT_DIR")"
REHOST_DIR="$HOME/.local/share/rehost"
MIGRATIONS_DIR="$REHOST_DIR/migrations"
STATE_FILE="$REHOST_DIR/migration.state"

RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

echo -e "${BLUE}=========================================="
echo "       Rehost System Setup"
echo -e "==========================================${NC}"

echo -e "${YELLOW}Running prechecks...${NC}"
if ! "$PROJECT_ROOT/install/prechecks.sh"; then
    echo -e "${RED}Prechecks failed. Please fix the issues and try again.${NC}"
    exit 1
fi

mkdir -p "$MIGRATIONS_DIR"
touch "$STATE_FILE"

echo -e "${GREEN}Rehost directory: $REHOST_DIR${NC}"
echo -e "${GREEN}Migrations will be stored in: $MIGRATIONS_DIR${NC}"

has_run() {
    local migration_name="$1"
    grep -q "^$migration_name$" "$STATE_FILE" 2>/dev/null
}

mark_complete() {
    local migration_name="$1"
    local migration_file="$2"
    echo "$migration_name" >> "$STATE_FILE"
    cp "$migration_file" "$MIGRATIONS_DIR/"
}

run_migration() {
    local script="$1"
    local script_name=$(basename "$script")

    if has_run "$script_name"; then
        echo -e "${YELLOW}  ⊙ Skipping (already run): $script_name${NC}"
        return 0
    fi

    echo -e "${BLUE}  → Running: $script_name${NC}"

    if bash "$script"; then
        mark_complete "$script_name" "$script"
        echo -e "${GREEN}  ✓ Completed: $script_name${NC}"
    else
        echo -e "${RED}  ✗ Failed: $script_name${NC}"
        exit 1
    fi
}

CURRENT_USER=$(whoami)
echo -e "${YELLOW}Running as: $CURRENT_USER${NC}"

if [ "$CURRENT_USER" = "root" ]; then
    echo -e "\n${BLUE}[System Migrations]${NC}"
    if [ -d "$PROJECT_ROOT/migrations/system" ]; then
        for script in $(ls "$PROJECT_ROOT/migrations/system"/*.sh 2>/dev/null | sort); do
            run_migration "$script"
        done
    else
        echo -e "${YELLOW}  No system migrations found${NC}"
    fi

    echo -e "\n${YELLOW}[User Migrations] - Skipping (run as non-root user)${NC}"
else
    echo -e "\n${YELLOW}[System Migrations] - Skipping (requires root)${NC}"
    echo -e "${YELLOW}Run with sudo for system-level changes${NC}"

    echo -e "\n${BLUE}[User Migrations]${NC}"
    if [ -d "$PROJECT_ROOT/migrations/user" ]; then
        for script in $(ls "$PROJECT_ROOT/migrations/user"/*.sh 2>/dev/null | sort); do
            run_migration "$script"
        done
    else
        echo -e "${YELLOW}  No user migrations found${NC}"
    fi
fi

echo -e "\n${GREEN}=========================================="
echo "       Setup completed successfully!"
echo -e "==========================================${NC}"
echo -e "${BLUE}Completed migrations are stored in: $MIGRATIONS_DIR${NC}"